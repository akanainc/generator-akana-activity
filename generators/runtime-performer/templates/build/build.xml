<project name="jbi-normalize" default="all">

	<property name="config.dir" value="../META-INF/config"/>
	<property name="spring.dir" value="../META-INF/spring"/>
	<property name="src.dir" value="../src"/>
	<property name="classes.dir" value="../bin"/>
	<property name="target.dir" value="${src.dir}" />
	<property name="schema.dir" value="../META-INF/resources" />
	<property name="binding.dir" value="./bindings" />
	<property name="l10n.dir" value="../OSGI-INF/l10n"/>
	
	<property name="bundle.file" value="${dist.dir}/com.akana.activity.normalize_${major.version}.${svn.revision}.jar"/>
	
	<fileset id="third.party.jars" dir="${third.party.dir}">
		<include name="*.jar"/>
	</fileset>
	
	<fileset id="soa.jars" dir="${soa.jars}">
		<include name="*.jar"/>
	</fileset>	
	
	<path id="base.classpath">
		<fileset refid="third.party.jars"/>
		<fileset refid="soa.jars"/>
    </path>	
	
	<path id="jaxb-classpath">
			<fileset dir="./lib" includes="jaxb2*.jar, activation.jar, xml_stream_api.jar" />
	</path>

	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath refid="jaxb-classpath" />
	</taskdef>

    <target name="all" description="Build it all." depends="bundle"/>
	
    <target name="clean" description="clean build artifacts" depends="init">
        <delete dir="${classes.dir}"/>
        <delete file="${bundle.file}"/>
    </target>

    <target name="init">
        <mkdir dir="${classes.dir}"/>
    </target>

	<target name="generate" description="Generate Manage Headers Java source files">
		<echo message="Compiling schemas..." />
		<xjc destdir="${target.dir}" extension="true">
			<binding dir="${binding.dir}">
				<include name="normalizeactivity.xjb"/>
			</binding>
			<schema dir="${schema.dir}">
				<include name="normalizeactivity.xsd"/>
			</schema>
			<produces dir="${target.dir}">
				<include name="com/akana/activity/normalize/model/**/*.*"/>
			</produces>			
		</xjc>
	</target>
	
	<target name="compile" depends="init">
		<echo>compiling com.akana.activity</echo>
		<javac source="${source.version}" bootclasspath="${boot.classpath}" destdir="${classes.dir}" debug="${javacdebug}" debuglevel="${debuglevel}" nowarn="${nowarn}" target="${compile.version}">
  			<src path="${src.dir}"/>
  			<include name="**/*.java"/>
  			<classpath>
  			    <path refid="base.classpath"/>
  		 	</classpath>
  		</javac>
	</target>
	
	<target name="bundle" depends="compile">
		<jar destfile="${bundle.file}" manifest="../META-INF/MANIFEST.MF">
			<fileset dir="${classes.dir}" includes="**/*.class"/>
			<!--<zipfileset dir="${config.dir}" includes="*.*" prefix="META-INF/config"/>-->
			<zipfileset dir="${spring.dir}" includes="*.*" prefix="META-INF/spring"/>
			<zipfileset dir="${l10n.dir}" includes="**/*.*" prefix="OSGI-INF/l10n"/>
		</jar>
	</target>	
	
</project>